---
import { Icon } from "astro-icon/components";

export interface Props {
  locale: string;
  t: (key: string) => string;
}

const { locale, t } = Astro.props;

// Helper function to create locale-aware paths
function createLocalePath(path: string) {
  if (locale === "en") {
    return path;
  }
  return `/${locale}${path}`;
}

const enterpriseFeatures = [
  {
    titleKey: "home.enterprise.features.redundancy.title",
    descriptionKey: "home.enterprise.features.redundancy.description",
    icon: "bx:bx-shield-quarter"
  },
  {
    titleKey: "home.enterprise.features.monitoring.title", 
    descriptionKey: "home.enterprise.features.monitoring.description",
    icon: "bx:bx-line-chart"
  },
  {
    titleKey: "home.enterprise.features.support.title",
    descriptionKey: "home.enterprise.features.support.description", 
    icon: "bx:bx-phone"
  },
  {
    titleKey: "home.enterprise.features.sla.title",
    descriptionKey: "home.enterprise.features.sla.description",
    icon: "bx:bx-check-shield"
  },
  {
    titleKey: "home.enterprise.features.scalability.title",
    descriptionKey: "home.enterprise.features.scalability.description",
    icon: "bx:bx-trending-up"
  },
  {
    titleKey: "home.enterprise.features.security.title",
    descriptionKey: "home.enterprise.features.security.description",
    icon: "bx:bx-lock"
  }
];

const transitBenefits = [
  {
    titleKey: "home.enterprise.transit.peering.title",
    descriptionKey: "home.enterprise.transit.peering.description",
    icon: "bx:bx-network-chart"
  },
  {
    titleKey: "home.enterprise.transit.bgp.title",
    descriptionKey: "home.enterprise.transit.bgp.description",
    icon: "bx:bx-git-branch"
  },
  {
    titleKey: "home.enterprise.transit.global.title",
    descriptionKey: "home.enterprise.transit.global.description",
    icon: "bx:bx-globe"
  },
  {
    titleKey: "home.enterprise.transit.ddos.title",
    descriptionKey: "home.enterprise.transit.ddos.description",
    icon: "bx:bx-shield"
  }
];
---

<div class="mt-16">
  <!-- Enterprise Features Section -->
  <div class="text-center mb-12">
    <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight text-black">
      {t('home.enterprise.features.title')}
    </h2>
    <p class="text-xl mt-4 text-gray-700 max-w-3xl mx-auto">
      {t('home.enterprise.features.subtitle')}
    </p>
  </div>

  <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
    {
      enterpriseFeatures.map((item) => (
        <div class="p-4 border border-gray-300 rounded-lg shadow-sm">
          <div class="flex gap-4 items-start">
            <div class="mt-1 bg-black rounded-full p-2 w-8 h-8 shrink-0">
              <Icon class="text-white" name={item.icon} />
            </div>
            <div>
              <h3 class="font-semibold text-lg text-black">{t(item.titleKey)}</h3>
              <p class="text-gray-700 mt-2 leading-relaxed">{t(item.descriptionKey)}</p>
            </div>
          </div>
        </div>
      ))
    }
  </div>

  <!-- IP Transit Highlights -->
  <div class="bg-gray-50 rounded-2xl p-8 mb-16">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <div>
        <h3 class="text-3xl font-bold text-black mb-6">{t('home.enterprise.transit.title')}</h3>
        <p class="text-lg text-gray-700 mb-6">{t('home.enterprise.transit.description')}</p>
        
        <div class="space-y-4 mb-8">
          {
            transitBenefits.map((benefit) => (
              <div class="flex items-start space-x-3">
                <div class="mt-1 bg-black rounded-full p-1 w-6 h-6 shrink-0">
                  <Icon class="text-white w-4 h-4" name={benefit.icon} />
                </div>
                <div>
                  <h4 class="font-medium text-black">{t(benefit.titleKey)}</h4>
                  <p class="text-gray-700 text-sm">{t(benefit.descriptionKey)}</p>
                </div>
              </div>
            ))
          }
        </div>

        <a 
          href={createLocalePath("/ip-transit/")} 
          class="inline-flex items-center space-x-2 bg-black text-white px-6 py-3 rounded-lg hover:bg-gray-800 transition-colors font-medium"
        >
          <span>{t('home.enterprise.transit.learnMore')}</span>
          <Icon name="bx:bx-right-arrow-alt" class="w-5 h-5" />
        </a>
      </div>
      
      <div class="relative">
        <!-- Network topology visualization -->
        <div class="bg-white rounded-xl p-6 shadow-lg">
          <h4 class="font-semibold text-black mb-4 text-center">{t('home.enterprise.transit.topologyTitle')}</h4>
          <div class="relative h-64 bg-gray-100 rounded-lg overflow-hidden p-4">
            <!-- Network nodes -->
            <div class="absolute top-4 left-1/2 transform -translate-x-1/2">
              <div class="bg-black rounded-full p-2 shadow-lg">
                <Icon name="bx:bx-server" class="text-white w-6 h-6" />
              </div>
              <div class="text-xs font-medium text-center mt-1 text-gray-700">Core</div>
            </div>
            
            <!-- Regional nodes -->
            <div class="absolute top-1/2 left-4">
              <div class="bg-gray-800 rounded-full p-2">
                <Icon name="bx:bx-network-chart" class="text-white w-4 h-4" />
              </div>
              <div class="text-xs text-center mt-1 text-gray-700">Asia</div>
            </div>
            
            <div class="absolute top-1/2 right-4">
              <div class="bg-gray-800 rounded-full p-2">
                <Icon name="bx:bx-network-chart" class="text-white w-4 h-4" />
              </div>
              <div class="text-xs text-center mt-1 text-gray-700">Global</div>
            </div>
            
            <div class="absolute bottom-4 left-1/4">
              <div class="bg-gray-600 rounded-full p-2">
                <Icon name="bx:bx-wifi" class="text-white w-4 h-4" />
              </div>
              <div class="text-xs text-center mt-1 text-gray-700">Edge</div>
            </div>
            
            <div class="absolute bottom-4 right-1/4">
              <div class="bg-gray-600 rounded-full p-2">
                <Icon name="bx:bx-wifi" class="text-white w-4 h-4" />
              </div>
              <div class="text-xs text-center mt-1 text-gray-700">Edge</div>
            </div>
            
            <!-- Connection lines -->
            <svg class="absolute inset-0 w-full h-full" xmlns="http://www.w3.org/2000/svg">
              <line x1="50%" y1="20%" x2="10%" y2="50%" stroke="#374151" stroke-width="2" opacity="0.6"/>
              <line x1="50%" y1="20%" x2="90%" y2="50%" stroke="#374151" stroke-width="2" opacity="0.6"/>
              <line x1="50%" y1="20%" x2="25%" y2="80%" stroke="#374151" stroke-width="2" opacity="0.6"/>
              <line x1="50%" y1="20%" x2="75%" y2="80%" stroke="#374151" stroke-width="2" opacity="0.6"/>
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Hosting & Maintenance CTA -->
  <div class="text-center bg-black rounded-2xl p-12 text-white">
    <h3 class="text-3xl font-bold mb-4">{t('home.enterprise.cta.title')}</h3>
    <p class="text-xl mb-8 opacity-90">{t('home.enterprise.cta.subtitle')}</p>
    <div class="flex flex-col sm:flex-row gap-4 justify-center">
      <a 
        href={createLocalePath("/hosting/")} 
        class="inline-flex items-center justify-center px-8 py-3 bg-white text-black font-medium rounded-lg hover:bg-gray-100 transition-colors"
      >
        {t('home.enterprise.cta.hosting')}
      </a>
      <a 
        href={createLocalePath("/contact/")} 
        class="inline-flex items-center justify-center px-8 py-3 border-2 border-white text-white font-medium rounded-lg hover:bg-white hover:text-black transition-colors"
      >
        {t('home.enterprise.cta.consultation')}
      </a>
    </div>
  </div>
</div>
